name: "Deploy Azure"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 9.0.x

      # Generate all the PDFs
      - name: Generate PDF
        run: dotnet run --project ./src/cv.PdfGenerator/cv.PdfGenerator.csproj --configuration Release

      # Build the website
      - name: Build WASM
        run: dotnet publish ./src/cv -c Release -o ./publish

      - name: Sync to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob sync \
            --connection-string "${{ secrets.AZURE_STORAGE_ACCOUNT_CONNECTION_STRING }}" \
            -c '$web' \
            -s ./publish/wwwroot

      - name: Set properties for GZIP files
        uses: azure/CLI@v1
        with:
          inlineScript: |
            # Find all .gz files
            gz_files=$(find ./publish/wwwroot -name "*.gz")

            # Set maximum number of parallel processes
            max_processes=10
            count=0

            # Update properties in parallel
            for file in $gz_files; do
              relative_path=${file#./publish/wwwroot/}
              az storage blob update \
                --connection-string "${{ secrets.AZURE_STORAGE_ACCOUNT_CONNECTION_STRING }}" \
                --container-name '$web' \
                --name "$relative_path" \
                --content-encoding "gzip" \
                --content-type "application/octet-stream" &

              # Increment process counter
              ((count++))

              # If we've reached max_processes, wait for them to complete
              if [ $count -eq $max_processes ]; then
                wait
                count=0
              fi
            done

            # Wait for any remaining processes
            wait